root = true

[*.cs]
insert_final_newline = true
end_of_line = crlf

indent_style = tab
indent_size = 4

# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference?view=vs-2019
# https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-language-conventions?view=vs-2019

# Roslyn analysers levels
# https://docs.microsoft.com/en-us/visualstudio/code-quality/use-roslyn-analyzers?view=vs-2019

# Organize usings
#dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
#file_header_template = unset

# this. and Me. preferences
#dotnet_style_qualification_for_event = false:silent
#dotnet_style_qualification_for_field = false:silent
#dotnet_style_qualification_for_method = false:silent
#dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
#dotnet_style_predefined_type_for_locals_parameters_members = true:silent
#dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
#dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
#dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
#dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
#dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
#dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
#dotnet_style_coalesce_expression = true:suggestion
#dotnet_style_collection_initializer = true:suggestion
#dotnet_style_explicit_tuple_names = true:suggestion
#dotnet_style_null_propagation = true:suggestion
#dotnet_style_object_initializer = true:suggestion
#dotnet_style_operator_placement_when_wrapping = beginning_of_line
#dotnet_style_prefer_auto_properties = true:silent
#dotnet_style_prefer_compound_assignment = true:suggestion
#dotnet_style_prefer_conditional_expression_over_assignment = true:silent
#dotnet_style_prefer_conditional_expression_over_return = true:silent
#dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
#dotnet_style_prefer_inferred_tuple_names = true:suggestion
#dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
#dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
#dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
#dotnet_style_readonly_field = true:suggestion

# Parameter preferences
#dotnet_code_quality_unused_parameters = all:suggestion

# Suppression preferences
#dotnet_remove_unnecessary_suppression_exclusions = none

#### C# Coding Conventions ####

# var preferences
#csharp_style_var_elsewhere = false:silent
#csharp_style_var_for_built_in_types = false:silent
#csharp_style_var_when_type_is_apparent = false:silent

# Expression-bodied members
#csharp_style_expression_bodied_accessors = true:silent
#csharp_style_expression_bodied_constructors = false:silent
#csharp_style_expression_bodied_indexers = true:silent
#csharp_style_expression_bodied_lambdas = true:silent
#csharp_style_expression_bodied_local_functions = false:silent
#csharp_style_expression_bodied_methods = false:silent
#csharp_style_expression_bodied_operators = false:silent
#csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
#csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
#csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
#csharp_style_prefer_not_pattern = true:suggestion
#csharp_style_prefer_pattern_matching = true:silent
#csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
#csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
#csharp_prefer_static_local_function = true:suggestion
#csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# Code-block preferences
#csharp_prefer_braces = true:silent
#csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
#csharp_prefer_simple_default_expression = true:suggestion
#csharp_style_deconstructed_variable_declaration = true:suggestion
#csharp_style_inlined_variable_declaration = true:suggestion
#csharp_style_pattern_local_over_anonymous_function = true:suggestion
#csharp_style_prefer_index_operator = true:suggestion
#csharp_style_prefer_range_operator = true:suggestion
#csharp_style_throw_expression = true:suggestion
#csharp_style_unused_value_assignment_preference = discard_variable:suggestion
#csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
#csharp_using_directive_placement = inside_namespace:silent

#### C# Formatting Rules ####

# New line preferences
#csharp_new_line_before_catch = true
#csharp_new_line_before_else = true
#csharp_new_line_before_finally = true
#csharp_new_line_before_members_in_anonymous_types = true
#csharp_new_line_before_members_in_object_initializers = true
#csharp_new_line_before_open_brace = all
#csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
#csharp_indent_block_contents = true
#csharp_indent_braces = false
#csharp_indent_case_contents = true
#csharp_indent_case_contents_when_block = true
#csharp_indent_labels = one_less_than_current
#csharp_indent_switch_labels = true

# Space preferences
#csharp_space_after_cast = false
#csharp_space_after_colon_in_inheritance_clause = true
#csharp_space_after_comma = true
#csharp_space_after_dot = false
#csharp_space_after_keywords_in_control_flow_statements = true
#csharp_space_after_semicolon_in_for_statement = true
#csharp_space_around_binary_operators = before_and_after
#csharp_space_around_declaration_statements = false
#csharp_space_before_colon_in_inheritance_clause = true
#csharp_space_before_comma = false
#csharp_space_before_dot = false
#csharp_space_before_open_square_brackets = false
#csharp_space_before_semicolon_in_for_statement = false
#csharp_space_between_empty_square_brackets = false
#csharp_space_between_method_call_empty_parameter_list_parentheses = false
#csharp_space_between_method_call_name_and_opening_parenthesis = false
#csharp_space_between_method_call_parameter_list_parentheses = false
#csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#csharp_space_between_method_declaration_name_and_open_parenthesis = false
#csharp_space_between_method_declaration_parameter_list_parentheses = false
#csharp_space_between_parentheses = false
#csharp_space_between_square_brackets = false

# Wrapping preferences
#csharp_preserve_single_line_blocks = true
#csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

#dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
#dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
#dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

#dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
#dotnet_naming_rule.types_should_be_pascal_case.symbols = types
#dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

#dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
#dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
#dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

#dotnet_naming_symbols.interface.applicable_kinds = interface
#dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
#dotnet_naming_symbols.interface.required_modifiers = 

#dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
#dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
#dotnet_naming_symbols.types.required_modifiers = 

#dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
#dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
#dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

#dotnet_naming_style.pascal_case.required_prefix = 
#dotnet_naming_style.pascal_case.required_suffix = 
#dotnet_naming_style.pascal_case.word_separator = 
#dotnet_naming_style.pascal_case.capitalization = pascal_case

#dotnet_naming_style.begins_with_i.required_prefix = I
#dotnet_naming_style.begins_with_i.required_suffix = 
#dotnet_naming_style.begins_with_i.word_separator = 
#dotnet_naming_style.begins_with_i.capitalization = pascal_case





# Default severity for all analyzer diagnostics
dotnet_analyzer_diagnostic.severity = none




#### CAxxxx ####

# CA1001:
dotnet_diagnostic.CA1001.severity = warning
# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = error
dotnet_diagnostic.CA1717.severity = error
dotnet_diagnostic.CA1009.severity = warning
dotnet_diagnostic.CA1012.severity = warning
dotnet_diagnostic.CA1016.severity = warning
dotnet_diagnostic.CA1033.severity = warning
dotnet_diagnostic.CA1049.severity = warning
dotnet_diagnostic.CA1060.severity = warning
dotnet_diagnostic.CA1061.severity = warning
dotnet_diagnostic.CA1063.severity = warning
dotnet_diagnostic.CA1065.severity = warning
dotnet_diagnostic.CA1301.severity = warning
# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = warning
dotnet_diagnostic.CA1400.severity = warning
dotnet_diagnostic.CA1401.severity = warning
dotnet_diagnostic.CA1403.severity = warning
dotnet_diagnostic.CA1404.severity = warning
dotnet_diagnostic.CA1405.severity = warning
dotnet_diagnostic.CA1410.severity = warning
dotnet_diagnostic.CA1415.severity = warning
# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = warning
dotnet_diagnostic.CA1821.severity = warning
# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = None
# CA1829: Use the 'Count' property instead of Enumerable.Count()
dotnet_diagnostic.CA1829.severity = warning
dotnet_diagnostic.CA1900.severity = warning
dotnet_diagnostic.CA1901.severity = warning
dotnet_diagnostic.CA2002.severity = warning
# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = suggestion
dotnet_diagnostic.CA2100.severity = warning
dotnet_diagnostic.CA2101.severity = warning
dotnet_diagnostic.CA2108.severity = warning
dotnet_diagnostic.CA2111.severity = warning
dotnet_diagnostic.CA2112.severity = warning
dotnet_diagnostic.CA2114.severity = warning
dotnet_diagnostic.CA2116.severity = warning
dotnet_diagnostic.CA2117.severity = warning
dotnet_diagnostic.CA2122.severity = warning
dotnet_diagnostic.CA2123.severity = warning
dotnet_diagnostic.CA2124.severity = warning
dotnet_diagnostic.CA2126.severity = warning
dotnet_diagnostic.CA2131.severity = warning
dotnet_diagnostic.CA2132.severity = warning
dotnet_diagnostic.CA2133.severity = warning
dotnet_diagnostic.CA2134.severity = warning
dotnet_diagnostic.CA2137.severity = warning
dotnet_diagnostic.CA2138.severity = warning
dotnet_diagnostic.CA2140.severity = warning
dotnet_diagnostic.CA2141.severity = warning
dotnet_diagnostic.CA2146.severity = warning
dotnet_diagnostic.CA2147.severity = warning
dotnet_diagnostic.CA2149.severity = warning
dotnet_diagnostic.CA2200.severity = warning
dotnet_diagnostic.CA2202.severity = warning
dotnet_diagnostic.CA2207.severity = warning
dotnet_diagnostic.CA2212.severity = warning
dotnet_diagnostic.CA2213.severity = warning
dotnet_diagnostic.CA2214.severity = warning
dotnet_diagnostic.CA2216.severity = warning
dotnet_diagnostic.CA2220.severity = warning
dotnet_diagnostic.CA2229.severity = warning
dotnet_diagnostic.CA2231.severity = warning
dotnet_diagnostic.CA2232.severity = warning
dotnet_diagnostic.CA2235.severity = warning
dotnet_diagnostic.CA2236.severity = warning
dotnet_diagnostic.CA2237.severity = warning
dotnet_diagnostic.CA2238.severity = warning
dotnet_diagnostic.CA2240.severity = warning
dotnet_diagnostic.CA2241.severity = warning
dotnet_diagnostic.CA2242.severity = warning

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = error

#### SAxxxx ####

# SA0001:
dotnet_diagnostic.SA0001.severity = none

# SA1025:
dotnet_diagnostic.SA1025.severity = error

# SA1027: Tabs and spaces should be used correctly
dotnet_diagnostic.SA1027.severity = none

# SA1028: Code should not contain trailing whitespace
dotnet_diagnostic.SA1028.severity = warning

# SA1100: 
dotnet_diagnostic.SA1100.severity = none

# SA1101:
dotnet_diagnostic.SA1101.severity = none

# SA1124:
dotnet_diagnostic.SA1124.severity = suggestion

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1202: 'public' members should come before 'private' members
dotnet_diagnostic.SA1202.severity = warning

# SA1208:
dotnet_diagnostic.SA1208.severity = none

# SA1309:
dotnet_diagnostic.SA1309.severity = none

# SA1310:
dotnet_diagnostic.SA1310.severity = none

# SA1312:
dotnet_diagnostic.SA1312.severity = error

# SA1413: use triling comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = error

# SA1500:
dotnet_diagnostic.SA1500.severity = error

# SA1514:
dotnet_diagnostic.SA1514.severity = none

# SA1600: Elements should be documented.
dotnet_diagnostic.SA1600.severity = none

# SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = none

# SA1611:
dotnet_diagnostic.SA1611.severity = none

# SA1633: The file header is missing or not located at the top of the file.
dotnet_diagnostic.SA1633.severity = none

# SA1649:
dotnet_diagnostic.SA1649.severity = error

# SA1652:
dotnet_diagnostic.SA1652.severity = none

# SA1508: Closing braces should not be preceded by blank line
dotnet_diagnostic.SA1508.severity = error

#### CSxxxx ####


# CS8602: Dereference of a possibly null reference


#### IDExxxx ####

# IDE0055: Fix formatting
dotnet_diagnostic.IDE0055.severity = none

#### Sxxxx ####

# S125: Sections of code should not be commented out
dotnet_diagnostic.S125.severity = error

# S1118: Utility classes should not have public constructors
dotnet_diagnostic.S1118.severity = error

# S1481: Unused local variables should be removed
dotnet_diagnostic.S1481.severity = error

# S100: Methods and properties should be named in PascalCase
dotnet_diagnostic.S100.severity = error

# S1006: Method overrides should not change parameter defaults
dotnet_diagnostic.S1006.severity = error

# S101: Types should be named in PascalCase
dotnet_diagnostic.S101.severity = error

# S103: Lines should not be too long
dotnet_diagnostic.S103.severity = error

# S104: Files should not have too many lines of code
dotnet_diagnostic.S104.severity = error

# S1048: Destructors should not throw exceptions
dotnet_diagnostic.S1048.severity = error

# S105: Tabulation characters should not be used
dotnet_diagnostic.S105.severity = None

# S106: Standard outputs should not be used directly to log anything
dotnet_diagnostic.S106.severity = error

# S1066: Collapsible "if" statements should be merged
dotnet_diagnostic.S1066.severity = error

# S1067: Expressions should not be too complex
dotnet_diagnostic.S1067.severity = error

# S107: Methods should not have too many parameters
dotnet_diagnostic.S107.severity = error

# S1075: URIs should not be hardcoded
dotnet_diagnostic.S1075.severity = error

# S108: Nested blocks of code should not be left empty
dotnet_diagnostic.S108.severity = error

# S109: Magic numbers should not be used
dotnet_diagnostic.S109.severity = error

# S110: Inheritance tree of classes should not be too deep
dotnet_diagnostic.S110.severity = error

# S1104: Fields should not have public accessibility
dotnet_diagnostic.S1104.severity = error

# S1109: A close curly brace should be located at the beginning of a line
dotnet_diagnostic.S1109.severity = error

# S1110: Redundant pairs of parentheses should be removed
dotnet_diagnostic.S1110.severity = error

# S1116: Empty statements should be removed
dotnet_diagnostic.S1116.severity = error

# S1117: Local variables should not shadow class fields
dotnet_diagnostic.S1117.severity = error

# S112: General exceptions should never be thrown
dotnet_diagnostic.S112.severity = error

# S1121: Assignments should not be made from within sub-expressions
dotnet_diagnostic.S1121.severity = error

# S1123: "Obsolete" attributes should include explanations
dotnet_diagnostic.S1123.severity = error

# S1125: Boolean literals should not be redundant
dotnet_diagnostic.S1125.severity = error

# S1128: Unused "using" should be removed
dotnet_diagnostic.S1128.severity = error

# S113: Files should contain an empty newline at the end
dotnet_diagnostic.S113.severity = error

# S1134: Track uses of "FIXME" tags
dotnet_diagnostic.S1134.severity = error

# S1135: Track uses of "TODO" tags
dotnet_diagnostic.S1135.severity = warning

# S1144: Unused private types or members should be removed
dotnet_diagnostic.S1144.severity = error

# S1145: Useless "if(true) {...}" and "if(false){...}" blocks should be removed
dotnet_diagnostic.S1145.severity = error

# S1147: Exit methods should not be called
dotnet_diagnostic.S1147.severity = error

# S1151: "switch case" clauses should not have too many lines of code
dotnet_diagnostic.S1151.severity = error

# S1155: "Any()" should be used to test for emptiness
dotnet_diagnostic.S1155.severity = error

# S1163: Exceptions should not be thrown in finally blocks
dotnet_diagnostic.S1163.severity = error

# S1168: Empty arrays and collections should be returned instead of null
dotnet_diagnostic.S1168.severity = error

# S1172: Unused method parameters should be removed
dotnet_diagnostic.S1172.severity = error

# S1185: Overriding members should do more than simply call the same member in the base class
dotnet_diagnostic.S1185.severity = error

# S1186: Methods should not be empty
dotnet_diagnostic.S1186.severity = error

# S1192: String literals should not be duplicated
dotnet_diagnostic.S1192.severity = error

# S1199: Nested code blocks should not be used
dotnet_diagnostic.S1199.severity = error

# S1200: Classes should not be coupled to too many other classes (Single Responsibility Principle)
dotnet_diagnostic.S1200.severity = error

# S1206: "Equals(Object)" and "GetHashCode()" should be overridden in pairs
dotnet_diagnostic.S1206.severity = error

# S121: Control structures should use curly braces
dotnet_diagnostic.S121.severity = error

# S1210: "Equals" and the comparison operators should be overridden when implementing "IComparable"
dotnet_diagnostic.S1210.severity = error

# S1215: "GC.Collect" should not be called
dotnet_diagnostic.S1215.severity = error

# S122: Statements should be on separate lines
dotnet_diagnostic.S122.severity = error

# S1226: Method parameters, caught exceptions and foreach variables' initial values should not be ignored
dotnet_diagnostic.S1226.severity = error

# S1227: break statements should not be used except for switch cases
dotnet_diagnostic.S1227.severity = error

# S1244: Floating point numbers should not be tested for equality
dotnet_diagnostic.S1244.severity = error

# S126: "if ... else if" constructs should end with "else" clauses
dotnet_diagnostic.S126.severity = error

# S1264: A "while" loop should be used instead of a "for" loop
dotnet_diagnostic.S1264.severity = error

# S127: "for" loop stop conditions should be invariant
dotnet_diagnostic.S127.severity = error

# S1301: "switch" statements should have at least 3 "case" clauses
dotnet_diagnostic.S1301.severity = error

# S1309: Track uses of in-source issue suppressions
dotnet_diagnostic.S1309.severity = error

# S131: "switch/Select" statements should contain a "default/Case Else" clauses
dotnet_diagnostic.S131.severity = error

# S134: Control flow statements "if", "switch", "for", "foreach", "while", "do"  and "try" should not be nested too deeply
dotnet_diagnostic.S134.severity = error

# S138: Functions should not have too many lines of code
dotnet_diagnostic.S138.severity = error

# S1449: Culture should be specified for "string" operations
dotnet_diagnostic.S1449.severity = error

# S1450: Private fields only used as local variables in methods should become local variables
dotnet_diagnostic.S1450.severity = error

# S1451: Track lack of copyright and license headers
dotnet_diagnostic.S1451.severity = none

# S1479: "switch" statements should not have too many "case" clauses
dotnet_diagnostic.S1479.severity = error

# S1541: Methods and properties should not be too complex
dotnet_diagnostic.S1541.severity = error

# S1607: Tests should not be ignored
dotnet_diagnostic.S1607.severity = error

# S1643: Strings should not be concatenated using '+' in a loop
dotnet_diagnostic.S1643.severity = error

# S1656: Variables should not be self-assigned
dotnet_diagnostic.S1656.severity = error

# S1659: Multiple variables should not be declared on the same line
dotnet_diagnostic.S1659.severity = error

# S1694: An abstract class should have both abstract and concrete methods
dotnet_diagnostic.S1694.severity = error

# S1696: NullReferenceException should not be caught
dotnet_diagnostic.S1696.severity = error

# S1697: Short-circuit logic should be used to prevent null pointer dereferences in conditionals
dotnet_diagnostic.S1697.severity = error

# S1698: "==" should not be used when "Equals" is overridden
dotnet_diagnostic.S1698.severity = error

# S1699: Constructors should only call non-overridable methods
dotnet_diagnostic.S1699.severity = error

# S1751: Loops with at most one iteration should be refactored
dotnet_diagnostic.S1751.severity = error

# S1764: Identical expressions should not be used on both sides of a binary operator
dotnet_diagnostic.S1764.severity = error

# S1821: "switch" statements should not be nested
dotnet_diagnostic.S1821.severity = error

# S1848: Objects should not be created to be dropped immediately without being used
dotnet_diagnostic.S1848.severity = error

# S1854: Unused assignments should be removed
dotnet_diagnostic.S1854.severity = error

# S1858: "ToString()" calls should not be redundant
dotnet_diagnostic.S1858.severity = error

# S1862: Related "if/else if" statements should not have the same condition
dotnet_diagnostic.S1862.severity = error

# S1871: Two branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S1871.severity = error

# S1905: Redundant casts should not be used
dotnet_diagnostic.S1905.severity = error

# S1939: Inheritance list should not be redundant
dotnet_diagnostic.S1939.severity = error

# S1940: Boolean checks should not be inverted
dotnet_diagnostic.S1940.severity = error

# S1944: Inappropriate casts should not be made
dotnet_diagnostic.S1944.severity = error

# S1994: "for" loop increment clauses should modify the loops' counters
dotnet_diagnostic.S1994.severity = error

# S2070: SHA-1 and Message-Digest hash algorithms should not be used in secure contexts
dotnet_diagnostic.S2070.severity = error

# S2114: Collections should not be passed as arguments to their own methods
dotnet_diagnostic.S2114.severity = error

# S2123: Values should not be uselessly incremented
dotnet_diagnostic.S2123.severity = error

# S2148: Underscores should be used to make large numbers readable
dotnet_diagnostic.S2148.severity = error

# S2156: "sealed" classes should not have "protected" members
dotnet_diagnostic.S2156.severity = error

# S2178: Short-circuit logic should be used in boolean contexts
dotnet_diagnostic.S2178.severity = error

# S2183: Integral numbers should not be shifted by zero or more than their number of bits-1
dotnet_diagnostic.S2183.severity = error

# S2184: Results of integer division should not be assigned to floating point variables
dotnet_diagnostic.S2184.severity = error

# S2187: TestCases should contain tests
dotnet_diagnostic.S2187.severity = error

# S2190: Recursion should not be infinite
dotnet_diagnostic.S2190.severity = error

# S2197: Modulus results should not be checked for direct equality
dotnet_diagnostic.S2197.severity = error

# S2201: Return values from functions without side effects should not be ignored
dotnet_diagnostic.S2201.severity = error

# S2219: Runtime type checking should be simplified
dotnet_diagnostic.S2219.severity = error

# S2221: "Exception" should not be caught when not required by called methods
dotnet_diagnostic.S2221.severity = error

# S2223: Non-constant static fields should not be visible
dotnet_diagnostic.S2223.severity = error

# S2225: "ToString()" method should not return null
dotnet_diagnostic.S2225.severity = error

# S2228: Console logging should not be used
dotnet_diagnostic.S2228.severity = error

# S2234: Parameters should be passed in the correct order
dotnet_diagnostic.S2234.severity = error

# S2251: A "for" loop update clause should move the counter in the right direction
dotnet_diagnostic.S2251.severity = error

# S2252: For-loop conditions should be true at least once
dotnet_diagnostic.S2252.severity = error

# S2259: Null pointers should not be dereferenced
dotnet_diagnostic.S2259.severity = error

# S2275: Composite format strings should not lead to unexpected behavior at runtime
dotnet_diagnostic.S2275.severity = error

# S2278: Neither DES (Data Encryption Standard) nor DESede (3DES) should be used
dotnet_diagnostic.S2278.severity = error

# S2290: Field-like events should not be virtual
dotnet_diagnostic.S2290.severity = error

# S2291: Overflow checking should not be disabled for "Enumerable.Sum"
dotnet_diagnostic.S2291.severity = error

# S2292: Trivial properties should be auto-implemented
dotnet_diagnostic.S2292.severity = error

# S2302: "nameof" should be used
dotnet_diagnostic.S2302.severity = error

# S2306: "async" and "await" should not be used as identifiers
dotnet_diagnostic.S2306.severity = error

# S2325: Methods and properties that don't access instance data should be static
dotnet_diagnostic.S2325.severity = none

# S2326: Unused type parameters should be removed
dotnet_diagnostic.S2326.severity = error

# S2327: "try" statements with identical "catch" and/or "finally" blocks should be merged
dotnet_diagnostic.S2327.severity = error

# S2328: "GetHashCode" should not reference mutable fields
dotnet_diagnostic.S2328.severity = error

# S2330: Array covariance should not be used
dotnet_diagnostic.S2330.severity = error

# S2333: Redundant modifiers should not be used
dotnet_diagnostic.S2333.severity = error

# S2339: Public constant members should not be used
dotnet_diagnostic.S2339.severity = error

# S2342: Enumeration types should comply with a naming convention
dotnet_diagnostic.S2342.severity = error

# S2344: Enumeration type names should not have "Flags" or "Enum" suffixes
dotnet_diagnostic.S2344.severity = error

# S2345: Flags enumerations should explicitly initialize all their members
dotnet_diagnostic.S2345.severity = error

# S2346: Flags enumerations zero-value members should be named "None"
dotnet_diagnostic.S2346.severity = error

# S2357: Fields should be private
dotnet_diagnostic.S2357.severity = error

# S2360: Optional parameters should not be used
dotnet_diagnostic.S2360.severity = error

# S2365: Properties should not make collection or array copies
dotnet_diagnostic.S2365.severity = error

# S2368: Public methods should not have multidimensional array parameters
dotnet_diagnostic.S2368.severity = error

# S2372: Exceptions should not be thrown from property getters
dotnet_diagnostic.S2372.severity = error

# S2376: Write-only properties should not be used
dotnet_diagnostic.S2376.severity = error

# S2386: Mutable fields should not be "public static"
dotnet_diagnostic.S2386.severity = error

# S2387: Child class fields should not shadow parent class fields
dotnet_diagnostic.S2387.severity = error

# S2436: Types and methods should not have too many generic parameters
dotnet_diagnostic.S2436.severity = error

# S2437: Silly bit operations should not be performed
dotnet_diagnostic.S2437.severity = error

# S2479: Whitespace and control characters in string literals should be explicit
dotnet_diagnostic.S2479.severity = error

# S2486: Generic exceptions should not be ignored
dotnet_diagnostic.S2486.severity = error

# S2551: Shared resources should not be used for locking
dotnet_diagnostic.S2551.severity = error

# S2583: Conditionally executed code should be reachable
dotnet_diagnostic.S2583.severity = error

# S2589: Boolean expressions should not be gratuitous
dotnet_diagnostic.S2589.severity = error

# S2674: The length returned from a stream read should be checked
dotnet_diagnostic.S2674.severity = error

# S2681: Multiline blocks should be enclosed in curly braces
dotnet_diagnostic.S2681.severity = error

# S2688: "NaN" should not be used in comparisons
dotnet_diagnostic.S2688.severity = error

# S2692: "IndexOf" checks should not be for positive numbers
dotnet_diagnostic.S2692.severity = error

# S2696: Instance members should not write to "static" fields
dotnet_diagnostic.S2696.severity = error

# S2699: Tests should include assertions
dotnet_diagnostic.S2699.severity = error

# S2701: Literal boolean values should not be used in assertions
dotnet_diagnostic.S2701.severity = error

# S2737: "catch" clauses should do more than rethrow
dotnet_diagnostic.S2737.severity = error

# S2743: Static fields should not be used in generic types
dotnet_diagnostic.S2743.severity = error

# S2755: XML parsers should not be vulnerable to XXE attacks
dotnet_diagnostic.S2755.severity = error

# S2757: "=+" should not be used instead of "+="
dotnet_diagnostic.S2757.severity = error

# S2758: The ternary operator should not return the same value regardless of the condition
dotnet_diagnostic.S2758.severity = error

# S2760: Sequential tests should not check the same condition
dotnet_diagnostic.S2760.severity = error

# S2761: Doubled prefix operators "!!" and "~~" should not be used
dotnet_diagnostic.S2761.severity = error

# S2857: SQL keywords should be delimited by whitespace
dotnet_diagnostic.S2857.severity = error

# S2930: "IDisposables" should be disposed
dotnet_diagnostic.S2930.severity = error

# S2931: Classes with "IDisposable" members should implement "IDisposable"
dotnet_diagnostic.S2931.severity = error

# S2933: Fields that are only assigned in the constructor should be "readonly"
dotnet_diagnostic.S2933.severity = error

# S2934: Property assignments should not be made for "readonly" fields not constrained to reference types
dotnet_diagnostic.S2934.severity = error

# S2952: Classes should "Dispose" of members from the classes' own "Dispose" methods
dotnet_diagnostic.S2952.severity = error

# S2953: Methods named "Dispose" should implement "IDisposable.Dispose"
dotnet_diagnostic.S2953.severity = error

# S2955: Generic parameters not constrained to reference types should not be compared to "null"
dotnet_diagnostic.S2955.severity = error

# S2971: "IEnumerable" LINQs should be simplified
dotnet_diagnostic.S2971.severity = error

# S2995: "Object.ReferenceEquals" should not be used for value types
dotnet_diagnostic.S2995.severity = error

# S2996: "ThreadStatic" fields should not be initialized
dotnet_diagnostic.S2996.severity = error

# S2997: "IDisposables" created in a "using" statement should not be returned
dotnet_diagnostic.S2997.severity = error

# S3005: "ThreadStatic" should not be used on non-static fields
dotnet_diagnostic.S3005.severity = error

# S3010: Static fields should not be updated in constructors
dotnet_diagnostic.S3010.severity = error

# S3052: Members should not be initialized to default values
dotnet_diagnostic.S3052.severity = error

# S3060: "is" should not be used with "this"
dotnet_diagnostic.S3060.severity = error

# S3168: "async" methods should not return "void"
dotnet_diagnostic.S3168.severity = error

# S3169: Multiple "OrderBy" calls should not be used
dotnet_diagnostic.S3169.severity = error

# S3172: Delegates should not be subtracted
dotnet_diagnostic.S3172.severity = error

# S3215: "interface" instances should not be cast to concrete types
dotnet_diagnostic.S3215.severity = error

# S3216: "ConfigureAwait(false)" should be used
dotnet_diagnostic.S3216.severity = error

# S3217: "Explicit" conversions of "foreach" loops should not be used
dotnet_diagnostic.S3217.severity = error

# S3218: Inner class members should not shadow outer class "static" or type members
dotnet_diagnostic.S3218.severity = error

# S3220: Method calls should not resolve ambiguously to overloads with "params"
dotnet_diagnostic.S3220.severity = error

# S3234: "GC.SuppressFinalize" should not be invoked for types without destructors
dotnet_diagnostic.S3234.severity = error

# S3235: Redundant parentheses should not be used
dotnet_diagnostic.S3235.severity = error

# S3236: Caller information arguments should not be provided explicitly
dotnet_diagnostic.S3236.severity = error

# S3237: "value" parameters should be used
dotnet_diagnostic.S3237.severity = error

# S3240: The simplest possible condition syntax should be used
dotnet_diagnostic.S3240.severity = error

# S3241: Methods should not return values that are never used
dotnet_diagnostic.S3241.severity = error

# S3242: Method parameters should be declared with base types
dotnet_diagnostic.S3242.severity = error

# S3244: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.S3244.severity = error

# S3246: Generic type parameters should be co/contravariant when possible
dotnet_diagnostic.S3246.severity = error

# S3247: Duplicate casts should not be made
dotnet_diagnostic.S3247.severity = error

# S3249: Classes directly extending "object" should not call "base" in "GetHashCode" or "Equals"
dotnet_diagnostic.S3249.severity = error

# S3251: Implementations should be provided for "partial" methods
dotnet_diagnostic.S3251.severity = error

# S3253: Constructor and destructor declarations should not be redundant
dotnet_diagnostic.S3253.severity = error

# S3254: Default parameter values should not be passed as arguments
dotnet_diagnostic.S3254.severity = error

# S3256: "string.IsNullOrEmpty" should be used
dotnet_diagnostic.S3256.severity = error

# S3257: Declarations and initializations should be as concise as possible
dotnet_diagnostic.S3257.severity = error

# S3261: Namespaces should not be empty
dotnet_diagnostic.S3261.severity = error

# S3262: "params" should be used on overrides
dotnet_diagnostic.S3262.severity = error

# S3263: Static fields should appear in the order they must be initialized 
dotnet_diagnostic.S3263.severity = error

# S3264: Events should be invoked
dotnet_diagnostic.S3264.severity = error

# S3265: Non-flags enums should not be used in bitwise operations
dotnet_diagnostic.S3265.severity = error

# S3343: Caller information parameters should come at the end of the parameter list
dotnet_diagnostic.S3343.severity = error

# S3346: Expressions used in "Debug.Assert" should not produce side effects
dotnet_diagnostic.S3346.severity = error

# S3353: Unchanged local variables should be "const"
dotnet_diagnostic.S3353.severity = error

# S3358: Ternary operators should not be nested
dotnet_diagnostic.S3358.severity = error

# S3366: "this" should not be exposed from constructors
dotnet_diagnostic.S3366.severity = error

# S3376: Attribute, EventArgs, and Exception type names should end with the type being extended
dotnet_diagnostic.S3376.severity = error

# S3397: "base.Equals" should not be used to check for reference equality in "Equals" if "base" is not "object"
dotnet_diagnostic.S3397.severity = error

# S3400: Methods should not return constants
dotnet_diagnostic.S3400.severity = error

# S3415: Assertion arguments should be passed in the correct order
dotnet_diagnostic.S3415.severity = error

# S3427: Method overloads with default parameter values should not overlap 
dotnet_diagnostic.S3427.severity = error

# S3431: "[ExpectedException]" should not be used
dotnet_diagnostic.S3431.severity = error

# S3433: Test method signatures should be correct
dotnet_diagnostic.S3433.severity = error

# S3440: Variables should not be checked against the values they're about to be assigned
dotnet_diagnostic.S3440.severity = error

# S3441: Redundant property names should be omitted in anonymous classes
dotnet_diagnostic.S3441.severity = error

# S3442: "abstract" classes should not have "public" constructors
dotnet_diagnostic.S3442.severity = error

# S3443: Type should not be examined on "System.Type" instances
dotnet_diagnostic.S3443.severity = error

# S3444: Interfaces should not simply inherit from base interfaces with colliding members
dotnet_diagnostic.S3444.severity = error

# S3445: Exceptions should not be explicitly rethrown
dotnet_diagnostic.S3445.severity = error

# S3447: "[Optional]" should not be used on "ref" or "out" parameters
dotnet_diagnostic.S3447.severity = error

# S3449: Right operands of shift operators should be integers
dotnet_diagnostic.S3449.severity = error

# S3450: Parameters with "[DefaultParameterValue]" attributes should also be marked "[Optional]"
dotnet_diagnostic.S3450.severity = error

# S3451: "[DefaultValue]" should not be used when "[DefaultParameterValue]" is meant
dotnet_diagnostic.S3451.severity = error

# S3453: Classes should not have only "private" constructors
dotnet_diagnostic.S3453.severity = error

# S3456: "string.ToCharArray()" should not be called redundantly
dotnet_diagnostic.S3456.severity = error

# S3457: Composite format strings should be used correctly
dotnet_diagnostic.S3457.severity = error

# S3458: Empty "case" clauses that fall through to the "default" should be omitted
dotnet_diagnostic.S3458.severity = error

# S3459: Unassigned members should be removed
dotnet_diagnostic.S3459.severity = error

# S3464: Type inheritance should not be recursive
dotnet_diagnostic.S3464.severity = error

# S3466: Optional parameters should be passed to "base" calls
dotnet_diagnostic.S3466.severity = error

# S3532: Empty "default" clauses should be removed
dotnet_diagnostic.S3532.severity = error

# S3597: "ServiceContract" and "OperationContract" attributes should be used together
dotnet_diagnostic.S3597.severity = error

# S3598: One-way "OperationContract" methods should have "void" return type
dotnet_diagnostic.S3598.severity = error

# S3600: "params" should not be introduced on overrides
dotnet_diagnostic.S3600.severity = error

# S3603: Methods with "Pure" attribute should return a value 
dotnet_diagnostic.S3603.severity = error

# S3604: Member initializer values should not be redundant
dotnet_diagnostic.S3604.severity = error

# S3610: Nullable type comparison should not be redundant
dotnet_diagnostic.S3610.severity = error

# S3626: Jump statements should not be redundant
dotnet_diagnostic.S3626.severity = error

# S3655: Empty nullable value should not be accessed
dotnet_diagnostic.S3655.severity = error

# S3693: Exception constructors should not throw exceptions
dotnet_diagnostic.S3693.severity = error

# S3717: Track use of "NotImplementedException"
dotnet_diagnostic.S3717.severity = error

# S3776: Cognitive Complexity of methods should not be too high
dotnet_diagnostic.S3776.severity = error

# S3869: "SafeHandle.DangerousGetHandle" should not be called
dotnet_diagnostic.S3869.severity = error

# S3871: Exception types should be "public"
dotnet_diagnostic.S3871.severity = error

# S3872: Parameter names should not duplicate the names of their methods
dotnet_diagnostic.S3872.severity = error

# S3874: "out" and "ref" parameters should not be used
dotnet_diagnostic.S3874.severity = error

# S3875: "operator==" should not be overloaded on reference types
dotnet_diagnostic.S3875.severity = error

# S3876: Strings or integral types should be used for indexers
dotnet_diagnostic.S3876.severity = error

# S3877: Exceptions should not be thrown from unexpected methods
dotnet_diagnostic.S3877.severity = error

# S3880: Finalizers should not be empty
dotnet_diagnostic.S3880.severity = error

# S3881: "IDisposable" should be implemented correctly
dotnet_diagnostic.S3881.severity = error

# S3884: "CoSetProxyBlanket" and "CoInitializeSecurity" should not be used
dotnet_diagnostic.S3884.severity = error

# S3885: "Assembly.Load" should be used
dotnet_diagnostic.S3885.severity = error

# S3887: Mutable, non-private fields should not be "readonly"
dotnet_diagnostic.S3887.severity = error

# S3889: Neither "Thread.Resume" nor "Thread.Suspend" should be used
dotnet_diagnostic.S3889.severity = error

# S3897: Classes that provide "Equals(<T>)" should implement "IEquatable<T>"
dotnet_diagnostic.S3897.severity = error

# S3898: Value types should implement "IEquatable<T>"
dotnet_diagnostic.S3898.severity = error

# S3900: Arguments of public methods should be validated against null
dotnet_diagnostic.S3900.severity = error

# S3902: "Assembly.GetExecutingAssembly" should not be called
dotnet_diagnostic.S3902.severity = error

# S3903: Types should be defined in named namespaces
dotnet_diagnostic.S3903.severity = error

# S3904: Assemblies should have version information
dotnet_diagnostic.S3904.severity = error

# S3906: Event Handlers should have the correct signature
dotnet_diagnostic.S3906.severity = error

# S3908: Generic event handlers should be used
dotnet_diagnostic.S3908.severity = error

# S3909: Collections should implement the generic interface
dotnet_diagnostic.S3909.severity = error

# S3923: All branches in a conditional structure should not have exactly the same implementation
dotnet_diagnostic.S3923.severity = error

# S3925: "ISerializable" should be implemented correctly
dotnet_diagnostic.S3925.severity = error

# S3926: Deserialization methods should be provided for "OptionalField" members
dotnet_diagnostic.S3926.severity = error

# S3927: Serialization event handlers should be implemented correctly
dotnet_diagnostic.S3927.severity = error

# S3928: Parameter names used into ArgumentException constructors should match an existing one 
dotnet_diagnostic.S3928.severity = error

# S3937: Number patterns should be regular
dotnet_diagnostic.S3937.severity = error

# S3949: Calculations should not overflow
dotnet_diagnostic.S3949.severity = error

# S3956: "Generic.List" instances should not be part of public APIs
dotnet_diagnostic.S3956.severity = error

# S3962: "static readonly" constants should be "const" instead
dotnet_diagnostic.S3962.severity = error

# S3963: "static" fields should be initialized inline
dotnet_diagnostic.S3963.severity = error

# S3966: Objects should not be disposed more than once
dotnet_diagnostic.S3966.severity = error

# S3967: Multidimensional arrays should not be used
dotnet_diagnostic.S3967.severity = error

# S3971: "GC.SuppressFinalize" should not be called
dotnet_diagnostic.S3971.severity = error

# S3972: Conditionals should start on new lines
dotnet_diagnostic.S3972.severity = error

# S3973: A conditionally executed single line should be denoted by indentation
dotnet_diagnostic.S3973.severity = error

# S3981: Collection sizes and array length comparisons should make sense
dotnet_diagnostic.S3981.severity = error

# S3984: Exceptions should not be created without being thrown
dotnet_diagnostic.S3984.severity = error

# S3990: Assemblies should be marked as CLS compliant
dotnet_diagnostic.S3990.severity = error

# S3992: Assemblies should explicitly specify COM visibility
dotnet_diagnostic.S3992.severity = error

# S3993: Custom attributes should be marked with "System.AttributeUsageAttribute"
dotnet_diagnostic.S3993.severity = error

# S3994: URI Parameters should not be strings
dotnet_diagnostic.S3994.severity = error

# S3995: URI return values should not be strings
dotnet_diagnostic.S3995.severity = error

# S3996: URI properties should not be strings
dotnet_diagnostic.S3996.severity = error

# S3997: String URI overloads should call "System.Uri" overloads
dotnet_diagnostic.S3997.severity = error

# S3998: Threads should not lock on objects with weak identity
dotnet_diagnostic.S3998.severity = error

# S4000: Pointers to unmanaged memory should not be visible
dotnet_diagnostic.S4000.severity = error

# S4002: Disposable types should declare finalizers
dotnet_diagnostic.S4002.severity = error

# S4004: Collection properties should be readonly
dotnet_diagnostic.S4004.severity = error

# S4005: "System.Uri" arguments should be used instead of strings
dotnet_diagnostic.S4005.severity = error

# S4015: Inherited member visibility should not be decreased
dotnet_diagnostic.S4015.severity = error

# S4016: Enumeration members should not be named "Reserved"
dotnet_diagnostic.S4016.severity = error

# S4017: Method signatures should not contain nested generic types
dotnet_diagnostic.S4017.severity = error

# S4018: Generic methods should provide type parameters
dotnet_diagnostic.S4018.severity = warning

# S4019: Base class methods should not be hidden
dotnet_diagnostic.S4019.severity = error

# S4022: Enumerations should have "Int32" storage
dotnet_diagnostic.S4022.severity = error

# S4023: Interfaces should not be empty
dotnet_diagnostic.S4023.severity = suggestion

# S4025: Child class fields should not differ from parent class fields only by capitalization
dotnet_diagnostic.S4025.severity = error

# S4026: Assemblies should be marked with "NeutralResourcesLanguageAttribute"
dotnet_diagnostic.S4026.severity = error

# S4027: Exceptions should provide standard constructors
dotnet_diagnostic.S4027.severity = error

# S4035: Classes implementing "IEquatable<T>" should be sealed
dotnet_diagnostic.S4035.severity = error

# S4039: Interface methods should be callable by derived types
dotnet_diagnostic.S4039.severity = error

# S4040: Strings should be normalized to uppercase
dotnet_diagnostic.S4040.severity = error

# S4041: Type names should not match namespaces
dotnet_diagnostic.S4041.severity = error

# S4047: Generics should be used when appropriate
dotnet_diagnostic.S4047.severity = error

# S4049: Properties should be preferred
dotnet_diagnostic.S4049.severity = suggestion

# S4050: Operators should be overloaded consistently
dotnet_diagnostic.S4050.severity = error

# S4052: Types should not extend outdated base types
dotnet_diagnostic.S4052.severity = error

# S4055: Literals should not be passed as localized parameters
dotnet_diagnostic.S4055.severity = error

# S4056: Overloads with a "CultureInfo" or an "IFormatProvider" parameter should be used
dotnet_diagnostic.S4056.severity = error

# S4057: Locales should be set for data types
dotnet_diagnostic.S4057.severity = error

# S4058: Overloads with a "StringComparison" parameter should be used
dotnet_diagnostic.S4058.severity = error

# S4059: Property names should not match get methods
dotnet_diagnostic.S4059.severity = error

# S4060: Non-abstract attributes should be sealed
dotnet_diagnostic.S4060.severity = error

# S4061: "params" should be used instead of "varargs"
dotnet_diagnostic.S4061.severity = error

# S4069: Operator overloads should have named alternatives
dotnet_diagnostic.S4069.severity = error

# S4070: Non-flags enums should not be marked with "FlagsAttribute"
dotnet_diagnostic.S4070.severity = error

# S4136: Method overloads should be grouped together
dotnet_diagnostic.S4136.severity = error

# S4142: Duplicate values should not be passed as arguments
dotnet_diagnostic.S4142.severity = error

# S4143: Collection elements should not be replaced unconditionally
dotnet_diagnostic.S4143.severity = error

# S4144: Methods should not have identical implementations
dotnet_diagnostic.S4144.severity = error

# S4158: Empty collections should not be accessed or iterated
dotnet_diagnostic.S4158.severity = error

# S4159: Classes should implement their "ExportAttribute" interfaces
dotnet_diagnostic.S4159.severity = error

# S4200: Native methods should be wrapped
dotnet_diagnostic.S4200.severity = error

# S4201: Null checks should not be used with "is"
dotnet_diagnostic.S4201.severity = error

# S4210: Windows Forms entry points should be marked with STAThread
dotnet_diagnostic.S4210.severity = error

# S4211: Members should not have conflicting transparency annotations
dotnet_diagnostic.S4211.severity = error

# S4212: Serialization constructors should be secured
dotnet_diagnostic.S4212.severity = error

# S4214: "P/Invoke" methods should not be visible
dotnet_diagnostic.S4214.severity = error

# S4220: Events should have proper arguments
dotnet_diagnostic.S4220.severity = error

# S4225: Extension methods should not extend "object"
dotnet_diagnostic.S4225.severity = error

# S4226: Extensions should be in separate namespaces
dotnet_diagnostic.S4226.severity = error

# S4260: "ConstructorArgument" parameters should exist in constructors
dotnet_diagnostic.S4260.severity = error

# S4261: Methods should be named according to their synchronicities
dotnet_diagnostic.S4261.severity = error

# S4275: Getters and setters should access the expected fields
dotnet_diagnostic.S4275.severity = error

# S4277: "Shared" parts should not be created with "new"
dotnet_diagnostic.S4277.severity = error

# S4426: Cryptographic keys should be robust
dotnet_diagnostic.S4426.severity = error

# S4428: "PartCreationPolicyAttribute" should be used with "ExportAttribute"
dotnet_diagnostic.S4428.severity = error

# S4432: AES encryption algorithm should be used with secured mode
dotnet_diagnostic.S4432.severity = error

# S4433: LDAP connections should be authenticated
dotnet_diagnostic.S4433.severity = error

# S4456: Parameter validation in yielding methods should be wrapped
dotnet_diagnostic.S4456.severity = error

# S4457: Parameter validation in "async"/"await" methods should be wrapped
dotnet_diagnostic.S4457.severity = error

# S4462: Calls to "async" methods should not be blocking
dotnet_diagnostic.S4462.severity = error

# S4487: Unread "private" fields should be removed
dotnet_diagnostic.S4487.severity = warning

# S4524: "default" clauses should be first or last
dotnet_diagnostic.S4524.severity = error

# S4564: ASP.NET HTTP request validation feature should not be disabled
dotnet_diagnostic.S4564.severity = error

# S4581: "new Guid()" should not be used
dotnet_diagnostic.S4581.severity = error

# S4583: Calls to delegate's method "BeginInvoke" should be paired with calls to "EndInvoke"
dotnet_diagnostic.S4583.severity = error

# S4586: Non-async "Task/Task<T>" methods should not return null
dotnet_diagnostic.S4586.severity = error

# S4635: String offset-based methods should be preferred for finding substrings from offsets
dotnet_diagnostic.S4635.severity = error

# S4830: Server certificates should be verified during SSL/TLS connections
dotnet_diagnostic.S4830.severity = error

# S5034: "ValueTask" should be consumed correctly
dotnet_diagnostic.S5034.severity = error

# S5542: Encryption algorithms should be used with secure mode and padding scheme
dotnet_diagnostic.S5542.severity = error

# S5547: Cipher algorithms should be robust
dotnet_diagnostic.S5547.severity = error

# S5773: Types allowed to be deserialized should be restricted
dotnet_diagnostic.S5773.severity = error

# S818: Literal suffixes should be upper case
dotnet_diagnostic.S818.severity = error

# S881: Increment (++) and decrement (--) operators should not be used in a method call or mixed with other operators in an expression
dotnet_diagnostic.S881.severity = error

# S907: "goto" statement should not be used
dotnet_diagnostic.S907.severity = error

# S927: parameter names should match base declaration and other partial definitions
dotnet_diagnostic.S927.severity = warning

# SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = error
