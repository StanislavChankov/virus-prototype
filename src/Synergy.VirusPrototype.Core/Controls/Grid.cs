// <auto-generated>
using System.Collections.Generic;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Synergy.VirusPrototype.Core.Builders;
using Synergy.VirusPrototype.Core.Controls.Abstract;
using Synergy.VirusPrototype.Shared.Services.Abstract;

namespace Synergy.VirusPrototype.Core.Controls
{
	public class Grid : IView, ITexture
	{
		private readonly IRectangleDrawer _rectangleDrawer;
		private readonly GraphicsDevice _graphicsDevice;

		public Grid(
			IRectangleDrawer rectangleDrawer,
			GraphicsDevice graphicsDevice)
		{
			Rows = new List<RowDefinition>();
			
			Width = graphicsDevice.Viewport.Bounds.Width;
			Height = graphicsDevice.Viewport.Bounds.Height;
			_rectangleDrawer = rectangleDrawer;
			_graphicsDevice = graphicsDevice;
		}

		public int Width { get; set; }

		public int Height { get; set; }

		public IView? Parent { get; set; }

		public ICollection<RowDefinition> Rows { get; set; }

		public Texture2D Texture { get; set; }
	}

	public enum GridUnitType
	{
		// Absolute = 0,
		Star = 1,
		// Auto = 2
	}

	public class TexturedViewBuilder
	{
		private readonly GraphicsDevice _graphicsDevice;

		public TexturedViewBuilder(GraphicsDevice graphicsDevice)
		{
			_graphicsDevice = graphicsDevice;
		}

		public Texture2D BuildView<TView>(TView view)
		{
			var texture = new Texture2D(_graphicsDevice, 1, 1, false, SurfaceFormat.Color);

			texture.SetData(new[] { Color.White });

			return texture;
		}
	}
}
