// <auto-generated>
using System;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.Options;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Synergy.VirusPrototype.Shared.Navigation.Abstract;
using Synergy.VirusPrototype.Shared.Options;

namespace Synergy.VirusPrototype.Shared
{
	public class GameStartup : Game
	{
		private readonly IServiceProvider _serviceProvider;
		private readonly GraphicsDeviceManager _graphics;
		private ISceneNavigator sceneNavigator;
		private bool _drawn;

		public GameStartup(
			IOptions<PageOptions> options,
			IServiceProvider serviceProvider)
		{
			Content.RootDirectory = "Content";
			_graphics = new GraphicsDeviceManager(this);
			_serviceProvider = serviceProvider;
		}

		protected override void Initialize()
		{
			IsMouseVisible = true;

			base.Initialize();
		}

		protected override void LoadContent()
		{
			// Use the content manager to load our texture

			// TODO: use this.Content to load your game content here
		}

		protected override void Update(GameTime gameTime)
		{
			if (_drawn)
			{
				SuppressDraw();
			}
		}

		protected override async void Draw(GameTime gameTime)
		{
			GraphicsDevice.Clear(Color.CornflowerBlue);

			sceneNavigator = _serviceProvider.CreateScope().ServiceProvider.GetRequiredService<ISceneNavigator>();

			await sceneNavigator.StartAsync();

			_drawn = true;
		}
	}
}
