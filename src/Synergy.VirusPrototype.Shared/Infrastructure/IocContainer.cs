// <auto-generated>
using System;
using Microsoft.Extensions.DependencyInjection;
using Synergy.VirusPrototype.Shared.Registrars;

namespace Synergy.VirusPrototype.Shared.Infrastructure
{
	public class IocContainer
    {
		public IocContainer()
		{
			Services = new ServiceCollection();

			//Services.RegisterMediatRServices();
			//Services.RegisterMvvm();
			//Services.RegisterOptions();

			// Services.AddTransient(typeof(IPipelineBehavior<,>), typeof(RequestPerformanceBehaviour<,>));
			// Services.AddTransient(typeof(IPipelineBehavior<,>), typeof(RequestValidationBehavior<,>));
		}

		public IServiceProvider ServiceProvider { get; private set; }

		public IServiceCollection Services { get; private set; }

		public T GetService<T>() => ServiceProvider.GetService<T>();

		public void BuildServiceProvider() => ServiceProvider = Services.BuildServiceProvider();
	}
}
